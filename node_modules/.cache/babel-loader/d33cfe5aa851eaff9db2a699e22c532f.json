{"ast":null,"code":"var _jsxFileName = \"/home/daffolap-824/React/my-app/src/component/form/form.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: event => {\n        event.preventDefault();\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"name\",\n        onChange: props.onNameHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"title\",\n        onChange: props.onTitleHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: props.onSubmitHandler,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Form;\n\nconst mapStateToProps = state => {\n  return {\n    name: state.name,\n    title: state.title\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onNameHandler: event => dispatch({\n      type: \"name\",\n      name: event.target.value\n    }),\n    onTitleHandler: event => dispatch({\n      type: \"title\",\n      title: event.target.value\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/home/daffolap-824/React/my-app/src/component/form/form.js"],"names":["React","useEffect","useState","connect","Form","props","event","preventDefault","onNameHandler","onTitleHandler","onSubmitHandler","mapStateToProps","state","name","title","mapDispatchToProps","dispatch","type","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AACA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACpB,sBACI;AAAA,2BACI;AAAM,MAAA,QAAQ,EAAGC,KAAD,IAAW;AAAEA,QAAAA,KAAK,CAACC,cAAN;AAAwB,OAArD;AAAA,8BACI;AAAO,QAAA,WAAW,EAAC,MAAnB;AAA0B,QAAA,QAAQ,EAAEF,KAAK,CAACG;AAA1C;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,WAAW,EAAC,OAAnB;AAA2B,QAAA,QAAQ,EAAEH,KAAK,CAACI;AAA3C;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,OAAO,EAAEJ,KAAK,CAACK,eAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAVD;;KAAMN,I;;AAWN,MAAMO,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHC,IAAAA,IAAI,EAAED,KAAK,CAACC,IADT;AAEHC,IAAAA,KAAK,EAAEF,KAAK,CAACE;AAFV,GAAP;AAIH,CALD;;AAMA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHR,IAAAA,aAAa,EAAGF,KAAD,IAAWU,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE,MAAR;AAAgBJ,MAAAA,IAAI,EAAEP,KAAK,CAACY,MAAN,CAAaC;AAAnC,KAAD,CAD/B;AAEHV,IAAAA,cAAc,EAAGH,KAAD,IAAWU,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE,OAAR;AAAiBH,MAAAA,KAAK,EAAER,KAAK,CAACY,MAAN,CAAaC;AAArC,KAAD;AAFhC,GAAP;AAIH,CALD;;AAMA,eAAehB,OAAO,CAACQ,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CX,IAA7C,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nconst Form = (props) => {\n    return (\n        <div>\n            <form onSubmit={(event) => { event.preventDefault() }}>\n                <input placeholder=\"name\" onChange={props.onNameHandler}></input>\n                <input placeholder=\"title\" onChange={props.onTitleHandler}></input>\n                <button onClick={props.onSubmitHandler}>Submit</button>\n            </form>\n        </div>\n    );\n}\nconst mapStateToProps = (state) => {\n    return {\n        name: state.name,\n        title: state.title,\n    };\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onNameHandler: (event) => dispatch({ type: \"name\", name: event.target.value }),\n        onTitleHandler: (event) => dispatch({ type: \"title\", title: event.target.value })\n    };\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);"]},"metadata":{},"sourceType":"module"}